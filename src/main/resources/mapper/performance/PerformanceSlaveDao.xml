<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.performance.dao.PerformanceSlaveDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <!--<resultMap type="io.renren.modules.performance.entity.PerformanceSlaveEntity" id="performanceSlaveMap">
        <result property="slaveId" column="slave_id"/>
        <result property="slaveName" column="slave_name"/>
        <result property="ip" column="ip"/>
        <result property="jmeterPort" column="jmeter_port"/>
        <result property="userName" column="user_name"/>
        <result property="passwd" column="passwd"/>
        <result property="sshPort" column="ssh_port"/>
        <result property="homeDir" column="home_dir"/>
        <result property="status" column="status"/>
        <result property="weight" column="weight"/>
        <result property="addTime" column="add_time"/>
        <result property="addBy" column="add_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
    </resultMap>-->
    <select id="queryObject" resultType="io.renren.modules.performance.entity.PerformanceSlaveEntity" >
        select * from test_performance_slave where slave_id = #{value}
    </select>

    <select id="queryList" resultType="io.renren.modules.performance.entity.PerformanceSlaveEntity" >
        select * from test_performance_slave
        <where>
            <if test="slaveName != null and slaveName.trim() != ''">
                slave_name like concat('%', #{slaveName}, '%')
            </if>
            <if test="status != null">
                `status` = #{status}
            </if>
            <if test="slaveIds != null and slaveIds.trim() != ''">
                slave_id in ( #{slaveIds} )
            </if>
        </where>
        <if test="sidx != null and sidx.trim() != ''">
            order by ${sidx} ${order}
        </if>
        <if test="offset != null and limit != null ">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(1) from test_performance_slave
        <where>
            <if test="slaveName != null and slaveName.trim() != ''">
                slave_name like concat('%', #{slaveName}, '%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="io.renren.modules.performance.entity.PerformanceSlaveEntity" useGeneratedKeys="true" keyProperty="slaveId">
        insert into test_performance_slave
        (
        `slave_name`,
        `ip`,
        `jmeter_port`,
        `user_name`,
        `passwd`,
        `ssh_port`,
        `home_dir`,
        `weight`,
        `add_by`
        )
        values
        (
        #{slaveName},
        #{ip},
        #{jmeterPort},
        #{userName},
        #{passwd},
        #{sshPort},
        #{homeDir},
        #{weight},
        #{addBy}
        )
    </insert>

    <update id="update" parameterType="io.renren.modules.performance.entity.PerformanceSlaveEntity">
        update test_performance_slave
        <set>
            <if test="slaveName != null">`slave_name` = #{slaveName}, </if>
            <if test="ip != null">`ip` = #{ip}, </if>
            <if test="jmeterPort != null">`jmeter_port` = #{jmeterPort}, </if>
            <if test="userName != null">`user_name` = #{userName}, </if>
            <if test="passwd != null">`passwd` = #{passwd}, </if>
            <if test="sshPort != null">`ssh_port` = #{sshPort}, </if>
            <if test="homeDir != null">`home_dir` = #{homeDir}, </if>
            <if test="status != null">`status` = #{status}, </if>
            <if test="weight != null">`weight` = #{weight}, </if>
            <if test="updateBy != null">`update_by` = #{updateBy}, </if>
        </set>
        where slave_id = #{slaveId}
    </update>

    <!-- 批量更新状态 -->
    <update id="updateBatch">
        update test_performance_slave set status = #{status} where slave_id in
        <foreach item="slaveId" collection="list"  open="(" separator="," close=")">
            #{slaveId}
        </foreach>
    </update>

    <delete id="deleteBatch">
        delete from test_performance_slave where slave_id in
        <foreach item="slaveId" collection="array" open="(" separator="," close=")">
            #{slaveId}
        </foreach>
    </delete>


</mapper>